// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.2/containers/docker-existing-docker-compose
// If you want to run as a non-root user in the container, see .devcontainer/docker-compose.yml.
{
	"name": "framepack",

	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": [
		"compose.yml"
	],

	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "ubuntu",
  "containerUser": "ubuntu",
  "overrideCommand": true,

  // The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/workspace",

  // Uncomment the next line if you want start specific services in your Docker Compose config.
	"runServices": [],

  // Features to add to the dev container. More info: https://containers.dev/features.
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {},
    "ghcr.io/devcontainers/features/git:1": {}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [
    7860
	],

  "portsAttributes": {
    "7860": {
      "label": "Gradio"
    }
  },

  //
  "updateContentCommand": "sudo bash .devcontainer/install-dev-tools.sh",

  // Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "bash .devcontainer/init.sh",

  // Configure tool-specific properties.
  "customizations": {
    "vscode": {
      "extensions": [
        // Company defaults
        "EditorConfig.EditorConfig",
        "VisualStudioExptTeam.vscodeintellicode",
        "sleistner.vscode-fileutils",
        "github.vscode-github-actions",
        "SanjulaGanepola.github-local-actions",
        "mutantdino.resourcemonitor",
        "christian-kohler.path-intellisense",
        "chrisdias.vscode-opennewinstance",
        "soerenuhrbach.vscode-deepl",

        // Python
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.autopep8",
        "njpwerner.autodocstring",
        "KevinRose.vsc-python-indent",

        // Jupyter
        "ms-toolsai.jupyter",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "ms-toolsai.jupyter-keymap",
        "ms-toolsai.jupyter-renderers",
        "ms-toolsai.vscode-jupyter-slideshow"
	    ]
    }
  }
}
